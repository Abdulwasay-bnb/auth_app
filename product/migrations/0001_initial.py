# Generated by Django 5.0.3 on 2024-04-04 11:14

import datetime
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseModel',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(default='', max_length=200)),
                ('location', models.CharField(max_length=200)),
                ('logo', models.ImageField(upload_to='uploads/')),
                ('details', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='product.basemodel')),
                ('email', models.EmailField(max_length=254)),
                ('comment', models.TextField()),
                ('name', models.CharField(default='', max_length=50)),
            ],
            bases=('product.basemodel',),
        ),
        migrations.CreateModel(
            name='Customer_Id',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='product.basemodel')),
                ('email', models.EmailField(max_length=254)),
                ('password', models.TextField()),
                ('salt', models.CharField()),
                ('full_name', models.CharField(max_length=50)),
                ('phone_number', models.FloatField(max_length=10)),
                ('phone_code', models.CharField()),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='uploads/')),
            ],
            bases=('product.basemodel',),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='product.basemodel')),
                ('total_price', models.FloatField(default=0.0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('product.basemodel',),
        ),
        migrations.CreateModel(
            name='CommentReply',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='product.basemodel')),
                ('reply', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('comment_p', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.comments')),
            ],
            bases=('product.basemodel',),
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='product.basemodel')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='uploads/')),
                ('category', models.CharField(choices=[('Mobile', 'Mobile'), ('Computer', 'Computer'), ('Aaccessories', 'Accessories')], default='Mobile')),
                ('price', models.FloatField(default=0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.provider')),
            ],
            bases=('product.basemodel',),
        ),
        migrations.AddField(
            model_name='comments',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.products'),
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='product.basemodel')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.provider')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.products')),
            ],
            bases=('product.basemodel',),
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='product.basemodel')),
                ('quantity', models.IntegerField(default=0)),
                ('carts', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.cart')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.products')),
            ],
            bases=('product.basemodel',),
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(through='product.CartProduct', to='product.products'),
        ),
    ]
